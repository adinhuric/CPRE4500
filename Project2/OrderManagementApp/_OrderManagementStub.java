package OrderManagementApp;


/**
* OrderManagementApp/_OrderManagementStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from OrderManagement.idl
* Monday, March 24, 2025 3:16:51 PM CDT
*/

public class _OrderManagementStub extends org.omg.CORBA.portable.ObjectImpl implements OrderManagementApp.OrderManagement
{


  // Customer
  public String viewMenu ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("viewMenu", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return viewMenu (        );
            } finally {
                _releaseReply ($in);
            }
  } // viewMenu

  public String placeOrder (String username, int chickenQty, int colaQty) throws OrderManagementApp.InvalidOrder
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("placeOrder", true);
                $out.write_string (username);
                $out.write_long (chickenQty);
                $out.write_long (colaQty);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:OrderManagementApp/InvalidOrder:1.0"))
                    throw OrderManagementApp.InvalidOrderHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return placeOrder (username, chickenQty, colaQty        );
            } finally {
                _releaseReply ($in);
            }
  } // placeOrder

  public OrderManagementApp.Order checkOrderStatus (String username) throws OrderManagementApp.InvalidOrder
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("checkOrderStatus", true);
                $out.write_string (username);
                $in = _invoke ($out);
                OrderManagementApp.Order $result = OrderManagementApp.OrderHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:OrderManagementApp/InvalidOrder:1.0"))
                    throw OrderManagementApp.InvalidOrderHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return checkOrderStatus (username        );
            } finally {
                _releaseReply ($in);
            }
  } // checkOrderStatus


  // Manager
  public OrderManagementApp.Order[] viewCurrentOrders ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("viewCurrentOrders", true);
                $in = _invoke ($out);
                OrderManagementApp.Order $result[] = OrderManagementApp.OrderListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return viewCurrentOrders (        );
            } finally {
                _releaseReply ($in);
            }
  } // viewCurrentOrders

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:OrderManagementApp/OrderManagement:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "OrderManagementApp._OrderManagementStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _OrderManagementStub
